{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","shiftPoint","handleEmodjisMovement","direction","setState","prevState","newShiftPoint","parseInt","props","step","itemWidth","images","length","infinite","prevProps","this","frameSize","className","style","width","transform","transition","animationDuration","map","image","index","src","alt","type","onClick","Component","App","htmlFor","name","id","value","onChange","event","target","max","min","checked","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.227b7b4e.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './Carousel.scss';\n\ninterface Props {\n  images: string[];\n  itemWidth: string,\n  frameSize: string,\n  step: string,\n  animationDuration: string,\n  infinite: boolean,\n}\n\ninterface State {\n  shiftPoint: number,\n}\n\nclass Carousel extends Component<Props, State> {\n  state = {\n    shiftPoint: 0,\n  };\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.itemWidth !== this.props.itemWidth\n      && this.state.shiftPoint !== 0) {\n      this.setState({ shiftPoint: 0 });\n    }\n  }\n\n  handleEmodjisMovement = (direction: number) => {\n    this.setState((prevState) => {\n      const newShiftPoint = prevState.shiftPoint\n        + (direction * parseInt(this.props.step, 10)\n        * parseInt(this.props.itemWidth, 10));\n\n      if (newShiftPoint > 0\n        || -newShiftPoint >= (this.props.images.length\n        * parseInt(this.props.itemWidth, 10))) {\n        if (this.props.infinite && direction === -1) {\n          return {\n            shiftPoint: 0,\n          };\n        }\n\n        return null;\n      }\n\n      return {\n        shiftPoint: newShiftPoint,\n      };\n    });\n  };\n\n  render() {\n    const { itemWidth, frameSize } = this.props;\n    const { shiftPoint } = this.state;\n\n    return (\n      <div className=\"Carousel\">\n        <div\n          className=\"Carousel__list-container\"\n          style={{ width: `${parseInt(frameSize, 10) * parseInt(itemWidth, 10)}px` }}\n        >\n          <ul\n            className=\"Carousel__list\"\n            style={{\n              transform: `translateX(${shiftPoint}px)`,\n              transition: `${this.props.animationDuration}ms`,\n            }}\n          >\n            {this.props.images.map((image, index) => {\n              return (\n                <li\n                  className=\"Carousel__item\"\n                  style={{ width: `${itemWidth}px` }}\n                >\n                  <img\n                    src={image}\n                    alt={`${index + 1}`}\n                    style={{ width: `${itemWidth}px` }}\n                  />\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n\n        <button\n          className=\"Carousel__button\"\n          type=\"button\"\n          onClick={() => this.handleEmodjisMovement(1)}\n        >\n          Prev\n        </button>\n\n        <button\n          className=\"Carousel__button\"\n          type=\"button\"\n          data-cy=\"next\"\n          onClick={() => this.handleEmodjisMovement(-1)}\n        >\n          Next\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import { Component } from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n  itemWidth: string,\n  frameSize: string,\n  step: string,\n  animationDuration: string,\n  infinite: boolean,\n}\n\nclass App extends Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    itemWidth: '130',\n    frameSize: '3',\n    step: '3',\n    animationDuration: '1000',\n    infinite: false,\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      step,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n\n        <div className=\"App__input-blocks\">\n          <label htmlFor=\"item-width\" className=\"App__input-block\">\n            Set item width:\n            <input\n              type=\"number\"\n              name=\"itemWidth\"\n              id=\"item-width\"\n              value={this.state.itemWidth}\n              onChange={(event) => {\n                this.setState({ itemWidth: event.target.value });\n              }}\n            />\n          </label>\n\n          <label htmlFor=\"frame-size\" className=\"App__input-block\">\n            Set frame size:\n            <input\n              type=\"number\"\n              name=\"frameSize\"\n              id=\"frame-size\"\n              max={10}\n              min={1}\n              value={this.state.frameSize}\n              onChange={(event) => {\n                this.setState({ frameSize: event.target.value });\n              }}\n            />\n          </label>\n\n          <label htmlFor=\"step\" className=\"App__input-block\">\n            Set step:\n            <input\n              type=\"number\"\n              name=\"step\"\n              id=\"step\"\n              max={10}\n              min={1}\n              value={this.state.step}\n              onChange={(event) => {\n                this.setState({ step: event.target.value });\n              }}\n            />\n          </label>\n\n          <label htmlFor=\"animation-duration\" className=\"App__input-block\">\n            Set animation duration:\n            <input\n              type=\"number\"\n              name=\"animationDuration\"\n              id=\"animation-duration\"\n              value={this.state.animationDuration}\n              onChange={(event) => {\n                this.setState({ animationDuration: event.target.value });\n              }}\n            />\n          </label>\n\n          <label htmlFor=\"infinite\" className=\"App__input-block\">\n            Infinite carousel:\n            <input\n              type=\"checkbox\"\n              name=\"infinite\"\n              id=\"infinite\"\n              checked={this.state.infinite}\n              onChange={() => {\n                this.setState(prevState => {\n                  return {\n                    infinite: !prevState.infinite,\n                  };\n                });\n              }}\n            />\n          </label>\n        </div>\n\n        <Carousel\n          images={images}\n          itemWidth={itemWidth}\n          frameSize={frameSize}\n          step={step}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}